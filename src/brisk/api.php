<?php

require "BriskResource.class.php";
require "BriskPage.class.php";

/**
 * 页面初始化.
 * @param {string} $framework 设置加载器的模块id. 后端加载框架会自动包含这个
 *                            js文件. 建议使用provides指令显式声明js id.
 * @param {?string} $mode 渲染模式
 * @return void
 */
function brisk_page_init($framework = null, $mode = null) {
  // load framework js library
  if (isset($framework)) {
    BriskResource::setFramework(BriskResource::load(BriskResource::TYPE_JS, $framework));
  }
  BriskPage::init($mode);
}

/**
 * 设置资源表文件(默认是resource.json)所在目录, 和smarty方案共用时默认是configDir
 */
function brisk_set_map_dir($dir) {
  BriskResource::setMapDir($dir);
}

/**
 * 获取资源表文件(默认是resource.json)所在目录
 * @return {string}
 */
function brisk_get_map_dir() {
  return BriskResource::getMapDir();
}

/**
 * 设置资源的cdn域名
 */
function brisk_set_cdn($domain) {
  BriskPage::setCDN($domain);
}

/**
 * 获取资源的cdn域名
 * @return {string}
 */
function brisk_get_cdn() {
  return BriskPage::getCDN();
}

/**
 * Include a JS static resource by symbol(which represents the module Id).
 * This function records a dependency for the current page, so when a response is
 * generated it can be included. You can call this method from any context, and
 * it is recommended you invoke it as close to the actual dependency as possible
 * so that page dependencies are minimized.
 *
 * @param string $symbol ID of the module to include. This is whatever you
 *               annotated as "@provides" in the file. Or self-generated by
 *               soi or its `messid` plugin.
 * @param bool   $async whether resource should be load asynchronously
 * @return void
 */
function brisk_require_js($symbol, $async = 'false') {
  $async = trim($async, '\'\" ');
  if ($symbol) {
    BriskPage::load(BriskResource::TYPE_JS, $symbol, $async);
  }
}

/**
 * Include a CSS static resource by symbol(which represents the module Id).
 * This function records a dependency for the current page, so when a response is
 * generated it can be included. You can call this method from any context, and
 * it is recommended you invoke it as close to the actual dependency as possible
 * so that page dependencies are minimized.
 *
 * @param string $symbol ID of the module to include. This is whatever you
 *               annotated as "@provides" in the file. Or self-generated by
 *               soi or its `messid` plugin.
 * @param string $async whether resource should be load asynchronously
 * @return void
 */
function brisk_require_css($symbol, $async = 'false') {
  $async = trim($async, '\'\" ');
  if ($symbol) {
    BriskPage::load(BriskResource::TYPE_CSS, $symbol, $async);
  }
}

/**
 * According to type and symbol get url
 * @param {string} $type
 * @param {string} $symbol
 * @return mixed
 */
function brisk_get_resource_uri($type, $symbol) {
  return BriskResource::getUri($type, $symbol);
}

/**
 * Output proper html content. Use RegExp to replace.
 * @param {string} $content html content
 * @return {mixed|string}
 */
function brisk_render_response($content) {
  return BriskPage::render($content);
}

function brisk_widget_start($pageletId, $mode, $group) {
  return BriskPage::widgetStart($pageletId, $mode, $group);
}

function brisk_widget_end($pageletId) {
  return BriskPage::widgetEnd($pageletId);
}